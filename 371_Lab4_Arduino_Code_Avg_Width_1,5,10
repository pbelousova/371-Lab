const int ledPin = 11;       // pin that the LED is attached to
const int analogPin = A0;
const int TWOPI = 2*3.1415926;

int brightness;

/*
  Smoothing

  Reads repeatedly from an analog input, calculating a running average and
  printing it to the computer. Keeps ten readings in an array and continually
  averages them.

  The circuit:
  - analog sensor (potentiometer will do) attached to analog input 0

  created 22 Apr 2007
  by David A. Mellis  <dam@mellis.org>
  modified 9 Apr 2012
  by Tom Igoe

  This example code is in the public domain.

  https://www.arduino.cc/en/Tutorial/BuiltInExamples/Smoothing
*/

// Define the number of samples to keep track of. The higher the number, the
// more the readings will be smoothed, but the slower the output will respond to
// the input. Using a constant rather than a normal variable lets us use this
// value to determine the size of the readings array.

//_10_______________________________________________________________________
const int numReadings_10 = 10;

int readings_10[numReadings_10];      // the readings from the analog input
int readIndex_10 = 0;              // the index of the current reading
int total_10 = 0;                  // the running total
int average_10 = 0;                // the average

//_5________________________________________________________________________
const int numReadings_5 = 5;

int readings_5[numReadings_5];      // the readings from the analog input
int readIndex_5 = 0;              // the index of the current reading
int total_5 = 0;                  // the running total
int average_5 = 0;                // the average

int inputPin = A0;


void setup() {
  // initialize serial communication with computer:
  Serial.begin(9600);
  pinMode(ledPin, OUTPUT);

//_setup_10_______________________________________________________________________

  // initialize all the readings to 0:
  for (int thisReading_10 = 0; thisReading_10 < numReadings_10; thisReading_10++) {
    readings_10[thisReading_10] = 0;
  }



//_setup_5________________________________________________________________________

  // initialize all the readings to 0:
  for (int thisReading_5 = 0; thisReading_5 < numReadings_5; thisReading_5++) {
    readings_5[thisReading_5] = 0;
  }
}


void loop() {
  int analogValue = analogRead(analogPin);
  brightness = 100+50*sin(1.0*TWOPI*millis()/1000);
  analogWrite(ledPin,brightness);

//_loop_10_______________________________________________________________________

  // subtract the last reading:
  total_10 = total_10 - readings_10[readIndex_10];
  // read from the sensor:
  readings_10[readIndex_10] = analogRead(inputPin);
  // add the reading to the total:
  total_10 = total_10 + readings_10[readIndex_10];
  // advance to the next position in the array:
  readIndex_10 = readIndex_10 + 1;

  // if we're at the end of the array...
  if (readIndex_10 >= numReadings_10) {
    // ...wrap around to the beginning:
    readIndex_10 = 0;
 



//_loop_5________________________________________________________________________

  // subtract the last reading:
  total_5 = total_5 - readings_5[readIndex_5];
  // read from the sensor:
  readings_5[readIndex_5] = analogRead(inputPin);
  // add the reading to the total:
  total_5 = total_5 + readings_5[readIndex_5];
  // advance to the next position in the array:
  readIndex_5 = readIndex_5 + 1;

  // if we're at the end of the array...
  if (readIndex_5 >= numReadings_5) {
    // ...wrap around to the beginning:
    readIndex_5 = 0;
  }

  // calculate the average_10:
  average_10 = total_10 / numReadings_10;
  // calculate the average_10:
  average_5 = total_5 / numReadings_5;


  // send it to the computer as ASCII digits
  Serial.print(millis());
  Serial.print(',');
  Serial.print(analogValue);
  Serial.print(',');
  Serial.print(average_5);
  Serial.print(',');
  Serial.println(average_10);
  
  delay(5);        // delay in between reads for stability
  }

 }
